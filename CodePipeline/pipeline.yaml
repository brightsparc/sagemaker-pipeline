AWSTemplateFormatVersion: "2010-09-09"
Description: >
  CloudFormation SageMaker pipeline.
Parameters:
  Email:
    Description: The email address where CodePipeline sends pipeline notifications
    Type: String
  GitHubToken:
    NoEcho: true
    Description: Secret. It might look something like 9b189a1654643522561f7b3ebd44a1531a4287af OAuthToken with access to Repo. Go to https://github.com/settings/tokens
    Type: String
  GitHubUser:
    Default: brightsparc
    Description: GitHub UserName
    Type: String
  Repo:
    Default: sagemaker-pipeline
    Description: GitHub Repo to pull from. Only the Name. not the URL
    Type: String
  Branch:
    Default: master
    Description: Branch to use from Repo. Only the Name. not the URL
    Type: String
  BucketPrefix:
    Default: aim362
    Description: The bucket prefix
    Type: String
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Stack Settings"
        Parameters:
          - Email
          - GitHubToken
          - GitHubUser
          - Repo
          - Branch

Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-pipeline-artifact-store
      VersioningConfiguration:
        Status: Enabled

  DataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-pipeline-data
      VersioningConfiguration:
        Status: Enabled

  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${AWS::StackName}-pipeline-topic
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email

  CFNNagProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-pipeline-cfnnag
      Description: Lints CloudFormation
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:1.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.7
              commands:
                - gem install cfn-nag
            build:
              commands:
                - cfn_nag_scan --input-path CloudFormation/*.yaml
      TimeoutInMinutes: 30

  ModelTrainingProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-pipeline-modeltraining
      Description: Trains machine learning model using SageMaker
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:1.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          env:
            exported-variables:
              - QA_ENDPOINT_NAME
              - PROD_ENDPOINT_NAME
          phases:
            install:
              runtime-versions:
                python: 3.7
              commands:
                - echo "Installing sagemaker"
                - pip3 install sagemaker
            pre_build:
              commands:
                - echo "Running data-prep.py"
                - python3 Source/Training/training_data_prep.py "${DataBucket}" "${BucketPrefix}"
            build:
              commands:
                - echo "Running training.py"
                - python3 Source/Training/training.py "${DataBucket}" "${BucketPrefix}" "${SagemakerExecutionRole.Arn}" "${SagemakerAutoScalingRole.Arn}" "${AWS::StackName}" $CODEBUILD_RESOLVED_SOURCE_VERSION
            post_build:
              commands:
                - echo "Exporting env vars"
                - source CloudFormation/training.vars
          artifacts:
            files:
              - '**/*'
      TimeoutInMinutes: 30

  TestEndpointProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-pipeline-test
      Description: Checks if endpoint is working
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:1.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.7
              commands:
                - echo "Installing sagemaker"
                - pip3 install sagemaker
            build:
              commands:
              - echo "Running test.py"
              - python3 Source/Test/test.py
      TimeoutInMinutes: 30

  SuggestBaselineProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-pipeline-suggestbaseline
      Description: Suggest a monitor baseline using using SageMaker
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:1.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          env:
            exported-variables:
              - PROCESSING_JOB_NAME
          phases:
            install:
              runtime-versions:
                python: 3.7
              commands:
                - echo "Installing sagemaker and pandas"
                - pip3 install sagemaker pandas
            pre_build:
              commands:
                - echo "Running monitor_prep.py"
                - python3 Source/Monitor/monitor_prep.py "${DataBucket}" "${BucketPrefix}"
            build:
              commands:
                - echo "Running suggest_baseline.py"
                - python3 Source/Monitor/monitor_baseline.py "${DataBucket}" "${BucketPrefix}" "${SagemakerExecutionRole.Arn}" "CloudFormation/configuration_qa.json"
            post_build:
              commands:
                - echo "Exporting env vars"
                - source CloudFormation/monitor_baseline.vars
          artifacts:
            files:
              - '**/*'
      TimeoutInMinutes: 30 

  MonitorScheduleProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-pipeline-monitorschedule
      Description: Suggest a monitor baseline using using SageMaker
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:1.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.7
              commands:
                - echo "Installing sagemaker and pandas"
                - pip3 install sagemaker pandas
            build:
              commands:
                - echo "Running monitor_schedule.py"
                - python3 Source/Monitor/create_schedule.py "${DataBucket}" "${BucketPrefix}" "${SagemakerExecutionRole.Arn}" 
            post_build:
              commands:
                - echo "Complete"
          artifacts:
            files:
              - '**/*'
      TimeoutInMinutes: 30    
    
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'ArtifactStoreBucket'
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Ref 'AWS::StackName'
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              Namespace: SourceVariables
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref 'GitHubUser'
                Repo: !Ref 'Repo'
                Branch: !Ref 'Branch'
                OAuthToken: !Ref 'GitHubToken'
              OutputArtifacts:
                - Name: src
              RunOrder: '1'
        - Name: Build_and_Train
          Actions:
            - Name: LintCloudFormation
              ActionTypeId:
                Category: Test
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref 'CFNNagProject'
              InputArtifacts:
                - Name: src
              RunOrder: '1'
            - Name: ModelTraining
              Namespace: TrainingVariables
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref 'ModelTrainingProject'
              InputArtifacts:
                - Name: src
              OutputArtifacts:
                - Name: bld
              RunOrder: '2'
        - Name: QA
          Actions:
            - Name: LaunchEndpoint
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: bld
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Sub ${AWS::StackName}-qa
                TemplatePath: !Sub "bld::CloudFormation/sagemaker-qa.yaml"
                TemplateConfiguration: "bld::CloudFormation/configuration_qa.json"
              RunOrder: '1'
            - Name: TestEndpoint
              ActionTypeId:
                Category: Test
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref 'TestEndpointProjectQA'
                EnvironmentVariables: '{"name":"ENDPOINT_NAME","value":"#{TrainingVariables.QA_ENDPOINT_NAME}","type":"PLAINTEXT"}]'
              InputArtifacts:
                - Name: bld
              RunOrder: '2'
        - Name: Monitoring
          Actions:
            - Name: SuggestBaseline
              Namespace: MonitoringVariables
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref 'SuggestBaselineProject'
              InputArtifacts:
                - Name: src
              RunOrder: '1'
            - Name: MonitorSchedule
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref 'MonitorScheduleProject'
                EnvironmentVariables: '[{"name":"PROCESSING_JOB_NAME","value":"#{MonitoringVariables.PROCESSING_JOB_NAME}","type":"PLAINTEXT"},{"name":"ENDPOINT_NAME","value":"#{TrainingVariables.QA_ENDPOINT_NAME}","type":"PLAINTEXT"}]'
              InputArtifacts:
                - Name: src
              RunOrder: '2'
        - Name: Production
          Actions:
            - Name: ApprovalGate
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                NotificationArn: !Ref CodePipelineSNSTopic
                CustomData: !Sub 'Do you want to push your changes to production?'
              RunOrder: '1'
            - Name: LaunchEndpoint
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: bld
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Sub ${AWS::StackName}-prod
                TemplatePath: !Sub "bld::CloudFormation/sagemaker-prod.yaml"
                TemplateConfiguration: "bld::CloudFormation/configuration_prod.json"
              RunOrder: '2'
            - Name: TestEndpoint
              ActionTypeId:
                Category: Test
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref 'TestEndpointProjectProd'
                EnvironmentVariables: '{"name":"ENDPOINT_NAME","value":"#{TrainingVariables.PROD_ENDPOINT_NAME}","type":"PLAINTEXT"}]'
              InputArtifacts:
                - Name: bld
              RunOrder: '3'

  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-cfn-role
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - sagemaker:*
                  - iam:PassRole
                  - s3:*
                  - application-autoscaling:*
                  - cloudwatch:PutMetricAlarm
                  - cloudwatch:DescribeAlarms
                  - cloudwatch:DeleteAlarms
                Effect: Allow
                Resource: '*'

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-codebuild-role
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: UploadAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - codepipeline:*
                - sagemaker:*
                - s3:*
                - ecr:GetAuthorizationToken
                - cloudwatch:PutMetricData
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:DescribeLogStreams
                - logs:PutLogEvents
                - logs:GetLogEvents
                Effect: Allow
                Resource: '*'
              - Action:
                - iam:PassRole
                Effect: Allow
                Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-sagemaker-role

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-pipeline-role
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - s3:*
                - codebuild:*
                - cloudformation:CreateStack
                - cloudformation:DescribeStacks
                - cloudformation:DeleteStack
                - cloudformation:UpdateStack
                - cloudformation:CreateChangeSet
                - cloudformation:ExecuteChangeSet
                - cloudformation:DeleteChangeSet
                - cloudformation:DescribeChangeSet
                - cloudformation:SetStackPolicy
                - iam:PassRole
                - sns:Publish
                Effect: Allow
                Resource: '*'

  SagemakerExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-sagemaker-role
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [sagemaker.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - s3:GetObject
                - s3:PutObject
                - s3:DeleteObject
                - s3:ListBucket
                Effect: Allow
                Resource: arn:aws:s3:::*

  SagemakerAutoScalingRole: 
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-autoscaling-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - sagemaker.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "AutoscalingPolicySagemaker"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "sagemaker:DescribeEndpoint"
                  - "sagemaker:DescribeEndpointConfig"
                  - "sagemaker:UpdateEndpointWeightsAndCapacities"
                Resource: "*"
              -
                Effect: "Allow"
                Action:
                  - "application-autoscaling:*"
                Resource: "*"
              -
                Effect: "Allow"
                Action:
                  - "cloudwatch:PutMetricAlarm"
                  - "cloudwatch:DescribeAlarms"
                  - "cloudwatch:DeleteAlarms"
                Resource: "*"
              -
                Effect: "Allow"
                Action: iam:CreateServiceLinkedRole
                Resource: "arn:aws:iam::*:role/aws-service-role/sagemaker.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_SageMakerEndpoint"
                Condition: 
                  StringLike: 
                    iam:AWSServiceName: sagemaker.application-autoscaling.amazonaws.com 

Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
    Description: CodePipeline URL
